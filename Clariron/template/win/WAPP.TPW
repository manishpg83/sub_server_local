#UTILITY(ApplicationWizard,'Create a New Database Application'),WIZARD(Application(Clarion)),HLP('~TPLWizardApplication.htm.htm')
#PREPARE
  #CALL(%DeclareTemplateSet)
  #SET(%QuickThemeList,%GetThemeListWiz())
  #SET(%QuickTheme,%GetFirstThemeWiz(%QuickThemeList))
  #IF(%QuickTheme)
      #CALL(%LoadThemeApplicationWizard)
  #ENDIF
#ENDPREPARE
#!
#SHEET
  #TAB('Application Wizard'),HLP('~TPLWizardApplication.htm')
    #IMAGE(''),PROP(PROP:Text,FULLNAME('WAPP1' & %GetColorSuffix() & '.GIF')),AT(,,75,115),PROP(PROP:Centered)
    #DISPLAY('This wizard will help you quickly create a new Application.'),AT(90,8,235,24)
    #DISPLAY('To begin creating your new Application, click Next.'),AT(90)
    #DISPLAY('')
    #DISPLAY('You will have an option to save your selections at the'),AT(90)
    #DISPLAY('end of this wizard procedure.'),AT(90)
    #BOXED,HIDE
      #INSERT(%TemplateSetPrompts)
    #ENDBOXED
  #ENDTAB
  #TAB('Application Wizard - Theme Selection'),HLP('~TPLWizardApplication.htm')
    #IMAGE(''),PROP(PROP:Text,FULLNAME('WAPP1' & %GetColorSuffix() & '.GIF')),AT(,,75,115),PROP(PROP:Centered)
    #DISPLAY('A theme determines the overall appearance of your application'),AT(90,8)
    #DISPLAY('by providing a predefined set of icons, fonts, colors, buttons,'),AT(90)
    #DISPLAY('and other window elements.'),AT(90)
    #DISPLAY(''),AT(90)
    #BOXED('HIDE'),HIDE
        #PROMPT('Theme:',@s255),%QuickThemeList
        #PROMPT('Layout:',@s255),%QuickLayoutList
    #ENDBOXED
    #PROMPT('Theme:',DROP(%QuickThemeList)),%QuickTheme,AT(140),PROMPTAT(90),WHENACCEPTED(%LoadThemeApplicationWizard())
    #VALIDATE(%QuickTheme<>'','You must select a Theme from the Dropbox')
    #PROMPT('Layout:',DROP(%QuickLayoutList)),%QuickLayout,AT(140),PROMPTAT(90),WHENACCEPTED(%LoadLayoutWindowReportPrompts(%QuickLayout))
    #VALIDATE(%QuickLayout<>'','You must select a Layout from the Dropbox')
    #DISPLAY
#!    #PROMPT('Save changes',CHECK),%QuickThemeRemember,AT(160,,235),DEFAULT(%True)
  #ENDTAB
  #TAB('Application Wizard - File Usage'),FINISH(1),HLP('~TPLWizardApplication.htm')
    #IMAGE(''),PROP(PROP:Text,FULLNAME('WAPP2' & %GetColorSuffix() & '.GIF')),AT(,,75,115),PROP(PROP:Centered)
    #DISPLAY('With the Application Wizard, you can generate procedures for all the files in your dictionary, or you can select individual files to use in the application'),AT(90,8,235,24)
    #DISPLAY('')
    #PROMPT('Generate Procedures for all files in my dictionary',CHECK),%QuickAppGenerateAllFiles,AT(90,,180),DEFAULT(1)
  #ENDTAB
  #TAB('Application Wizard - Select Files to Use'),WHERE(NOT %QuickAppGenerateAllFiles),FINISH(1),HLP('~TPLWizardApplication.htm')
    #IMAGE(''),PROP(PROP:Text,FULLNAME('WFSCH' & %GetColorSuffix() & '.GIF')),AT(,,75,115),PROP(PROP:Centered)
    #PROMPT('File Selection',FROM(%File)),%FileSelection,INLINE,SELECTION('File Selection'),AT(90,8,235)
  #ENDTAB
  #TAB('Application Wizard - Control Model'),HLP('~TPLWizardApplication.htm'),FINISH(1)
    #IMAGE(''),PROP(PROP:Text,FULLNAME('WAPP3' & %GetColorSuffix() & '.GIF')),AT(,,75,115),PROP(PROP:Centered)
    #DISPLAY('The Application Wizard can generate applications using any of the following Control Models:'),AT(90,8,235,24)
    #DISPLAY('Button: Traditional Insert, Change, Delete, OK and Cancel approach'),AT(90)
    #DISPLAY('Toolbar: Browse controls are populated on a common toolbar'),AT(90)
    #DISPLAY('Both: Employs both control models'),AT(90)
    #PROMPT('Which Control Model should the Application use?',DROP('Button|Toolbar|Both')),%ControlModel,AT(90,85),PROMPTAT(90,75,235)
  #ENDTAB
  #TAB('Application Wizard - Window and Control Customization'),HLP('~TPLWizardApplication.htm'),FINISH(1)
    #IMAGE(''),PROP(PROP:Text,FULLNAME('WAPP3' & %GetColorSuffix() & '.GIF')),AT(,,75,115),PROP(PROP:Centered)
    #DISPLAY('Select the Next button to accept the current settings '),AT(90,8,235,24)
    #DISPLAY(''),AT(90)
    #BOXED('Customization'),AT(90,,235)
    #INSERT(%CustomizationFramePrompts)
    #INSERT(%CustomizationBrowsePrompts)
    #INSERT(%CustomizationFormPrompts)
    #INSERT(%CustomizationReportPrompts)
    #ENDBOXED
  #ENDTAB
  #TAB('Application Wizard - Internet Connect'),WHERE(ITEMS(%Procedure)<=1),FINISH(1)
    #IMAGE(''),PROP(PROP:Text,FULLNAME('WAPP1' & %GetColorSuffix() & '.GIF')),AT(,,75,115),PROP(PROP:Centered)
    #DISPLAY('The Application Wizard can produce an application that will work as both a windows and a Internet application.'),AT(90,8,235,24)
    #PROMPT ('Create an Internet Enabled Application', CHECK),%QueryInternet,AT(90,,180),DEFAULT(0)
  #END
  #TAB('Application Wizard - Procedures & Reports'),FINISH(1),HLP('~TPLWizardApplication.htm')
    #IMAGE(''),PROP(PROP:Text,FULLNAME('WAPP1' & %GetColorSuffix() & '.GIF')),AT(,,75,115),PROP(PROP:Centered)
    #DISPLAY('If you are creating new procedures with names that already exist in your application, the old procedures can be overwritten or the new procedures can be suppressed.'),AT(90,8,235,30)
    #PROMPT('Overwrite existing procedures',CHECK),%QuickAppPromptOverwriteAll,AT(90,,235),DEFAULT(0)
    #IMAGE('<255,1,4,127>'),AT(90,55)
    #DISPLAY('The procedure specified as your First Procedure will always be overwritten by the application wizard!'),AT(125,54,200,20)
    #DISPLAY('Reports can be generated for every file in the dictionary. You may choose whether or not to generate these reports.'),AT(90,85,235,24)
    #PROMPT('&Generate Reports for each file',CHECK),%GenerateReports,DEFAULT(%True),AT(90,110)
    #ENABLE(%GenerateReports)
        #PROMPT('Select Sort Option:',DROP('Single Key|Runtime Key Selection|Record Order')),%QuickReportPromptSortType,DEFAULT('Single Key'),AT(180,,120),PROMPTAT(90,,75)
    #ENDENABLE
  #ENDTAB
  #TAB('Application Wizard - Finally...'),FINISH(1),HLP('~TPLWizardApplication.htm')
    #IMAGE(''),PROP(PROP:Text,FULLNAME('WAPP1' & %GetColorSuffix() & '.GIF')),AT(,,75,115),PROP(PROP:Centered)
    #DISPLAY('You may save your choices to a Theme file to be reused later.  You can save the choices in the current Theme file or you can create a new file'),AT(90,8,235,30)
    #PROMPT('Save changes?',CHECK),%QuickThemeRemember,AT(90,,235),DEFAULT(%True)
    #DISPLAY(''),AT(90)
    #PROMPT('Save settings to a new Theme?',CHECK),%QuickThemeSavedAs,AT(90,,235),DEFAULT(%False)
    #ENABLE(%QuickThemeSavedAs)
    #BOXED('New Theme Data'),AT(90,,180)
         #PROMPT('Theme Name:',@S25),%QuickNewThemeName
         #VALIDATE(%QuickNewThemeName<>'','The Theme name can''t be null')
         #DISPLAY('Ex: MyTheme')
         #PROMPT('File Name:',@S25),%QuickNewThemeFileName
         #VALIDATE(%QuickNewThemeFileName<>'','The Theme file name can''t be null')
         #DISPLAY('Ex: MyTheme.TFT')
    #ENDBOXED
    #ENDENABLE
  #ENDTAB
#ENDSHEET
#IF(%QuickThemeSavedAs)
   #CALL(%SaveAsThemeWiz,%QuickNewThemeName,%QuickNewThemeFileName)
#ENDIF
#! Save Theme
#IF(%QuickThemeRemember OR %QuickThemeSavedAs)
   #CALL(%SaveThemeApplicationWizard)
#ENDIF
#!
#INSERT(%DeclareSymbols)
#!
#SET(%GenerateAllReports,%GenerateReports)
#SET(%GenerateProgramSection,%True)
#SET(%ReplaceExistingProcedures,%QuickAppPromptOverwriteAll)
#IF (ITEMS(%Procedure)<=1 AND %QueryInternet)
  #SET(%GenerateInternet,%True)
#END
#IF(NOT %Procedure)
  #ADD(%ProcedureList,%FirstProcedure)
  #SET(%QuickProcedurePrimary,'')
  #SET(%QuickProcedureType,'Clarion Frame')
  #SET(%QuickProcedureDescription,'Clarion for Windows Wizard Application for ' & %DictionaryFile)
  #SET(%QuickProcedureWindow,%True)
#ENDIF
#!
#CALL(%LoadThemeApplicationWizardPostDeclaration)
#!
#SET(%ProgramType,'')
#IF(CLIP(%QuickBrowseChildHandling)='' OR %QuickBrowseChildHandling='0')
    #SET(%ProgramType,'Simple')
#ELSE
    #SET(%ProgramType,'Full')
#ENDIF
#!
#!
#INSERT(%GenerateProcedures)
#!
#GROUP(%QuickAppDeclarations)
#!
#!------------------------------------------------------------------
#GROUP(%ConstructQuickApp)
#!
#DECLARE(%AppFilesList),MULTI
#DECLARE(%CallProcName)
#FIX(%ProcedureList,%CurrentProcedure)
#MESSAGE('Generating Internal File Tables',2)
#IF(%QuickAppGenerateAllFiles)
  #FOR(%File),WHERE(NOT EXTRACT(%FileQuickOptions,'NOPOPULATE'))
    #IF(ITEMS(%Field))
      #ADD(%AppFilesList,%File)
      #INSERT(%GenerateQuickAppCalls)
      #FIX(%ProcedureList,%CurrentProcedure)
    #ENDIF
  #ENDFOR
#ELSE
  #FOR(%FileSelection)
    #FIX(%File,%FileSelection)
    #IF(ITEMS(%Field))
      #ADD(%AppFilesList,%File)
      #INSERT(%GenerateQuickAppCalls)
      #FIX(%ProcedureList,%CurrentProcedure)
    #ENDIF
  #ENDFOR
#ENDIF
#!
#IF(%SQLUsed)
  #FOR(%SQLDrivers)
#ADD(%QuickOtherFiles,%SQLFile)
  #ENDFOR
  #ADD(%FilledEmbed,'DataSectionAfterWindow')
  #ADD(%FilledEmbedContents,'SQLOpenWindow WINDOW(''Initializing Database''),AT(,,198,24),FONT(''Microsoft Sans Serif'',10,,FONT:regular),GRAY,CENTER')
  #ADD(%FilledEmbedContents,'       STRING(''This process could take several seconds.''),AT(27,12)')
  #ADD(%FilledEmbedContents,'       IMAGE(Icon:Connect),AT(4,4,20,17)')
  #ADD(%FilledEmbedContents,'       STRING(''Please wait while the program connects to the database.''),AT(27,3)')
  #ADD(%FilledEmbedContents,'     END')
  #ADD(%FilledEmbed,'BeforeFileOpen')
  #ADD(%FilledEmbedContents,'SETCURSOR(Cursor:Wait)')
  #ADD(%FilledEmbedContents,'OPEN(SQLOpenWIndow)')
  #ADD(%FilledEmbedContents,'ACCEPT')
  #ADD(%FilledEmbedContents,'  IF EVENT() = Event:OpenWindow')
  #ADD(%FilledEmbed,'AfterFileOpen')
  #ADD(%FilledEmbedContents,'    POST(EVENT:CloseWindow)')
  #ADD(%FilledEmbedContents,'  END')
  #ADD(%FilledEmbedContents,'END')
  #ADD(%FilledEmbedContents,'CLOSE(SQLOpenWindow)')
  #ADD(%FilledEmbedContents,'SETCURSOR()')
#ENDIF
#!
#ADD(%WindowLayerID,%MenuBar)
#IF(%CusFrameMenuFileEnable)
#INSERT(%AddMenuItem,'MENU('''&%CusFrameMenuFileText&'''),USE(?FileMenu)','')
  #INSERT(%AddMenuItem,'ITEM('''&%CusFrameMenuFilePrintText&'''),USE(?PrintSetup),MSG('''&%CusFrameMenuFilePrintMsg&'''),STD(STD:PrintSetup)','')
  #INSERT(%AddMenuItem,'ITEM,SEPARATOR','')
  #INSERT(%AddMenuItem,'ITEM('''&%CusFrameMenuFileExitText&'''),USE(?Exit),MSG('''&%CusFrameMenuFileExitMsg&'''),STD(STD:Close)','')
#INSERT(%AddMenuItem,'END','')
#ENDIF
#IF(%CusFrameMenuEditEnable)
#INSERT(%AddMenuItem,'MENU('''&%CusFrameMenuEditText&'''),USE(?EditMenu)','')
  #INSERT(%AddMenuItem,'ITEM('''&%CusFrameMenuEditCutText&'''),USE(?Cut),MSG('''&%CusFrameMenuEditCutMsg&'''),STD(STD:Cut)','')
  #INSERT(%AddMenuItem,'ITEM('''&%CusFrameMenuEditCopyText&'''),USE(?Copy),MSG('''&%CusFrameMenuEditCopyMsg&'''),STD(STD:Copy)','')
  #INSERT(%AddMenuItem,'ITEM('''&%CusFrameMenuEditPasteText&'''),USE(?Paste),MSG('''&%CusFrameMenuEditPasteMsg&'''),STD(STD:Paste)','')
#INSERT(%AddMenuItem,'END','')
#ENDIF
#IF(ITEMS(%AppFilesList))
  #INSERT(%AddMenuItem,'MENU(''&Browse''),USE(?BrowseMenu)','')
  #FOR(%AppFilesList)
    #FIX(%FileList,%AppFilesList)
    #SET(%CallProcName,%CusBrowseProcName)
    #CALL(%ReplaceSubString,%CallProcName,'%FileName',%FileList)
    #IF(%FileListDescription)
      #INSERT(%AddMenuItem,'ITEM(''Browse ' & %FileListDescription & '''),USE(?' & %CallProcName & '),MSG(''Browse ' & %FileListDescription & ''')',%CallProcName)
    #ELSE
      #INSERT(%AddMenuItem,'ITEM(''Browse the '& %FileList & ' file''),USE(?' & %CallProcName & '),MSG(''Browse ' & %FileList & ''')',%CallProcName)
    #ENDIF
  #ENDFOR
  #INSERT(%AddMenuItem,'END','')
  #IF(%GenerateAllReports)
    #INSERT(%AddMenuItem,'MENU(''&Reports''),USE(?ReportMenu),MSG(''Report data'')','')
    #FOR(%AppFilesList)
      #FIX(%FileList,%AppFilesList)
      #SET(%ValueConstruct,0)
      #IF(%QuickReportPromptSortType='Single Key')
         #FOR(%KeyListID),WHERE(NOT %KeyListNoPopulate)
           #SET(%ValueConstruct,%ValueConstruct + 1)
         #ENDFOR
      #END
      #SET(%CallProcName,%CusReportProcName)
      #CALL(%ReplaceSubString,%CallProcName,'%FileName',%FileList)
      #IF(%ValueConstruct = 0)
        #IF(%FileListDescription)
          #INSERT(%AddMenuItem,'ITEM(''Print the ' & %FileListDescription & '''),USE(?' & %CallProcName & '),MSG(''Print in record order'')',%CallProcName)
        #ELSE
          #INSERT(%AddMenuItem,'ITEM(''Print the ' & %FileList & ' file''),USE(?' & %CallProcName & '),MSG(''Print in record order'')',%CallProcName)
        #ENDIF
      #ELSIF(%ValueConstruct = 1)
        #FOR(%KeyListID),WHERE(NOT %KeyListNoPopulate)
          #SET(%CallProcName,%CusReportProcNameKey)
          #CALL(%ReplaceSubString,%CallProcName,'%FileName',%FileList)
          #CALL(%ReplaceSubString,%CallProcName,'%Key',%KeyList)
          #IF(%KeyListDescription)
            #INSERT(%AddMenuItem,'ITEM(''Print by ' & %KeyListDescription & '''),USE(?' & %CallProcName & '),MSG(''Print ordered by ' & %KeyListDescription & ''')',%CallProcName)
          #ELSE
            #INSERT(%AddMenuItem,'ITEM(''Print by ' & %KeyList & ' key''),USE(?' & %CallProcName & '),MSG(''Print ordered by the ' & %KeyList & ' key'')',%CallProcName)
          #ENDIF
        #ENDFOR
      #ELSE
        #IF(%FileListDescription)
          #INSERT(%AddMenuItem,'MENU(''Report ' & %FileListDescription & '''),USE(?' & %CallProcName & ')','')
        #ELSE
          #INSERT(%AddMenuItem,'MENU(''Report the ' & %FileList & ' file''),USE(?' & %CallProcName & ')','')
        #ENDIF
        #FOR(%KeyListID),WHERE(NOT %KeyListNoPopulate)
          #SET(%CallProcName,%CusReportProcNameKey)
          #CALL(%ReplaceSubString,%CallProcName,'%FileName',%FileList)
          #CALL(%ReplaceSubString,%CallProcName,'%Key',%KeyList)
          #IF(%KeyListDescription)
            #INSERT(%AddMenuItem,'ITEM(''Print by ' & %KeyListDescription & '''),USE(?' & %CallProcName & '),MSG(''Print ordered by ' & %KeyListDescription & ''')',%CallProcName)
          #ELSE
            #INSERT(%AddMenuItem,'ITEM(''Print by ' & %KeyList & ' key''),USE(?' & %CallProcName & '),MSG(''Print ordered by the ' & %KeyList & ' key'')',%CallProcName)
          #ENDIF
        #ENDFOR
        #INSERT(%AddMenuItem,'END','')
      #ENDIF
    #ENDFOR
    #INSERT(%AddMenuItem,'END','')
  #ENDIF
#ENDIF
#IF(%CusFrameMenuWindowEnable)
#INSERT(%AddMenuItem,'MENU('''&%CusFrameMenuWindowText&'''),USE(?WindowMenu),STD(STD:WindowList)','','')
  #INSERT(%AddMenuItem,'ITEM('''&%CusFrameMenuWindowTileText&'''),USE(?Tile),MSG('''&%CusFrameMenuWindowTileMsg&'''),STD(STD:TileWindow)','')
  #INSERT(%AddMenuItem,'ITEM('''&%CusFrameMenuWindowCascadeText&'''),USE(?Cascade),MSG('''&%CusFrameMenuWindowCascadeMsg&'''),STD(STD:CascadeWindow)','')
  #INSERT(%AddMenuItem,'ITEM('''&%CusFrameMenuWindowArrangeText&'''),USE(?Arrange),MSG('''&%CusFrameMenuWindowArrangeMsg&'''),STD(STD:ArrangeIcons)','')
#INSERT(%AddMenuItem,'END','')
#ENDIF
#IF(%CusFrameMenuHelpEnable)
#INSERT(%AddMenuItem,'MENU('''&%CusFrameMenuHelpText&'''),USE(?HelpMenu)','','')
  #INSERT(%AddMenuItem,'ITEM('''&%CusFrameMenuHelpContentsText&'''),USE(?Helpindex),MSG('''&%CusFrameMenuHelpContentsMsg&'''),STD(STD:HelpIndex)','')
  #INSERT(%AddMenuItem,'ITEM('''&%CusFrameMenuHelpSearchText&'''),USE(?HelpSearch),MSG('''&%CusFrameMenuHelpSearchMsg&'''),STD(STD:HelpSearch)','')
  #INSERT(%AddMenuItem,'ITEM('''&%CusFrameMenuHelpHowText&'''),USE(?HelpOnHelp),MSG('''&%CusFrameMenuHelpHowMsg&'''),STD(STD:HelpOnHelp)','')
#INSERT(%AddMenuItem,'END','')
#ENDIF
#!
#!------------------------------------------------------------------
#GROUP(%AddMenuItem,%ItemStatement,%ItemProcedure)
#ADD(%WindowControlID,ITEMS(%WindowControlID))
#SET(%WindowControlStatement,%ItemStatement)
#IF(%ItemProcedure)
  #ADD(%ButtonControlID,ITEMS(%ButtonControlID))
  #SET(%ButtonControl,'?' & %ItemProcedure)
  #SET(%ButtonAction,'Call a Procedure')
  #SET(%ButtonProcedure,%ItemProcedure)
  #SET(%ButtonThread,%True)
  #SET(%ButtonThreadStack,50000)
#ENDIF
#!------------------------------------------------------------------
#GROUP(%GenerateQuickAppCalls)
#FIX(%FileList,%File)
#IF(NOT %FileList)
  #ADD(%FileList,%File)
  #INSERT(%AccumulateFieldList,%FileList)
#ENDIF
#INSERT(%AddPrimaryBrowse,%FileList)
#SET(%ValueConstruct,0)
#FOR(%KeyListID),WHERE(NOT %KeyListNoPopulate)
  #SET(%ValueConstruct,%ValueConstruct+1)
#ENDFOR
#IF(%ValueConstruct)
  #IF(%QuickReportPromptSortType='Single Key')
      #FOR(%KeyListID),WHERE(NOT %KeyListNoPopulate)
        #INSERT(%AddReportProcedure,%KeyList)
      #ENDFOR
  #ELSE
      #INSERT(%AddReportProcedure,%FileList)
  #ENDIF
#ELSE
  #INSERT(%AddReportProcedure,%FileList)
#ENDIF
#!------------------------------------------------------------------
